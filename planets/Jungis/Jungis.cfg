// Special thanks to KillAshley as some of the scripts are from Uncharted Lands. The PQS of Habis is from UL.
@Kopernicus:AFTER[Kopernicus]
{
	Body
    {
        name = Jungis
        flightGlobalsIndex = 18
        Template
        {
            name = Jool
        }
        Properties
        {
            description = Jungis is a gas giant that has confused Kerbalkind ever since its discovery. It is Jool's true sister planet, with practically the same statistics.
        
            radius = 6000000
			
            geeASL = 0.8
        }
        Orbit
        {
            referenceBody = Sun
            color = 0,1,0,1
            inclination = 3.5
            eccentricity = 0.01
            semiMajorAxis = 92486933278
            longitudeOfAscendingNode = 0
            argumentOfPeriapsis = 0
            meanAnomalyAtEpoch = 0
            epoch = 0
        }
		Rings
		{
			Ring
            {
                angle = 0
                outerRadius = 1650
                innerRadius = 1200
                texture = Jungis/TextureBank/jool_ring
                color = 0,1,0,1
                lockRotation = false
                unlit = false
            }
			Ring
            {
                angle = 0
                outerRadius = 2200
                innerRadius = 1700
                texture = Jungis/TextureBank/jool_ring
                color = 0,1,0,1
                lockRotation = false
                unlit = false
            }
			Ring
            {
                angle = 0
                outerRadius = 3000
                innerRadius = 2300
                texture = Jungis/TextureBank/jool_ring
                color = 0,1,0,1
                lockRotation = false
                unlit = false
            }
		}
        ScaledVersion
        {
            Material
            {	
                texture = Jungis/TextureBank/Jungis
            }
        }
    }
	Body
    {
        name = Cere
        flightGlobalsIndex = 1236
        Template
        {
            name = Gilly  //keep this as is, other small moons (Minmus, Dres, Bop, Pol) use different height characteristics
        }
        Properties
        {
			description = The first moon of Jungis! It is a really freakin' tiny asteroid but is bigger than Gilly. It is also coated in green dust from Jungis' rings, because they're messy.
			radius = 16000  //You can have a really tiny asteroid if you want.  Kopernicus will still work if this number is as low as 100 meters
			geeASL = 0.04  //don't set this too low, or the body will have an SOI that's too small.  Gilly = 0.03
			tidallyLocked = True  //If the same side of the moon always faces the body it's orbiting, it's tidally locked.  Examples include the Moon in real life, and the Mun in KSP.

			ScienceValues
			{
				landedDataValue = 12
				inSpaceLowDataValue = 10
				inSpaceHighDataValue = 9.5
				recoveryValue = 10
				spaceAltitudeThreshold =  15000	
			}			
        }
        Orbit
        {
            referenceBody = Jungis  //You can also add moons to the stock planets, for example, Jool.  
            color = 0,1,0,0.1
            inclination = 0  //Don't be afraid to set high inclinations or eccentricities for asteroids, this makes them more of a challenge to get to!
            eccentricity = 0
            semiMajorAxis = 10045000 //this is about twice Bop's SMA.
            longitudeOfAscendingNode = 55
            argumentOfPeriapsis = 0
            meanAnomalyAtEpoch = 0
            epoch = 0
        }
		ScaledVersion
        {
            Material
            {	
                texture = Jungis/TextureBank/Cere_Color
                normals = Jungis/TextureBank/Cere_Normal
            }
        }
		PQS
		{
			Mods
			{
				VertexSimplexHeightAbsolute
				{
					seed = 5355563  //change this to any random number
					deformity = 3200  //how high are the highest plateaus and mountains
					octaves = 4  //how small do you want the mountains to be  (3 or lower, they take up basically a quarter of the planet)
					persistence = 0.4  //don't know what these do, you can try changing them and see what happens
					frequency = 1.0
					enabled = True
				}
				VertexHeightNoise
				{
					seed = 23510750  //change this to any random number
					deformity = 220  //how bumpy and jagged is the terrain
					frequency = 2  //don't know what these do, you can try changing them and see what happens
					lacunarity = 2.5
					persistance = 1.0
					octaves = 6  //how small do you want the jagged ridges to be
					enabled = True
				}
				VertexSimplexNoiseColor  //Small gilly-based moons don't have color maps and use this instead
				{
					seed = 0175123  //change this to any random number
					blend = 1
					colorStart = 0,1,0,1  //The color of your moon is a spectrum between these two colors
					colorEnd = 0.3,0.3,0.3,1
					octaves = 7  //how small do you want the blotches of color to be
					persistence = 0.5  //don't know what these do, you can try changing them and see what happens
					frequency = 1
					enabled = True
				}
			}
		}
    }
	Body
    {
        name = Rammi
        flightGlobalsIndex = 1236
        Template
        {
            name = Gilly  //keep this as is, other small moons (Minmus, Dres, Bop, Pol) use different height characteristics
        }
        Properties
        {
			description = AKA JMLT. The origins of this moon are unknown, and no one knows where it came from. It looks like a pumpkin.
			radius = 33000  //You can have a really tiny asteroid if you want.  Kopernicus will still work if this number is as low as 100 meters
			geeASL = 0.12  //don't set this too low, or the body will have an SOI that's too small.  Gilly = 0.03
			tidallyLocked = True  //If the same side of the moon always faces the body it's orbiting, it's tidally locked.  Examples include the Moon in real life, and the Mun in KSP.

			ScienceValues
			{
				landedDataValue = 12
				inSpaceLowDataValue = 10
				inSpaceHighDataValue = 9.5
				recoveryValue = 10
				spaceAltitudeThreshold =  15000	
			}			
        }
        Orbit
        {
            referenceBody = Jungis  //You can also add moons to the stock planets, for example, Jool.  
            color = 0.5,0.2,0,0.2
            inclination = 0  //Don't be afraid to set high inclinations or eccentricities for asteroids, this makes them more of a challenge to get to!
            eccentricity = 0
            semiMajorAxis = 13500000 //this is about twice Bop's SMA.
            longitudeOfAscendingNode = 0
            argumentOfPeriapsis = 0
            meanAnomalyAtEpoch = 0
            epoch = 0
        }
		ScaledVersion
        {
            Material
            {	
                texture = Jungis/TextureBank/Rammi_Color
                normals = Jungis/TextureBank/Rammi_Normal
            }
        }
		PQS
		{
			Mods
			{
				VertexSimplexHeightAbsolute
				{
					seed = 6773994  //change this to any random number
					deformity = 5300  //how high are the highest plateaus and mountains
					octaves = 9  //how small do you want the mountains to be  (3 or lower, they take up basically a quarter of the planet)
					persistence = 0.4  //don't know what these do, you can try changing them and see what happens
					frequency = 1.0
					enabled = True
				}
				VertexHeightNoise
				{
					seed = 23510750  //change this to any random number
					deformity = 330  //how bumpy and jagged is the terrain
					frequency = 2  //don't know what these do, you can try changing them and see what happens
					lacunarity = 2.5
					persistance = 1.0
					octaves = 6  //how small do you want the jagged ridges to be
					enabled = True
				}
				VertexSimplexNoiseColor  //Small gilly-based moons don't have color maps and use this instead
				{
					seed = 0175123  //change this to any random number
					blend = 1
					colorStart = 0.5,0.2,0,1  //The color of your moon is a spectrum between these two colors
					colorEnd = 0.3,0.3,0.3,1
					octaves = 7  //how small do you want the blotches of color to be
					persistence = 0.5  //don't know what these do, you can try changing them and see what happens
					frequency = 1
					enabled = True
				}
			}
		}
    }
	Body
    {
        name = Elos
        flightGlobalsIndex = 1236
        Template
        {
            name = Gilly  //keep this as is, other small moons (Minmus, Dres, Bop, Pol) use different height characteristics
        }
        Properties
        {
			description = What's this doing?
			radius = 28000  //You can have a really tiny asteroid if you want.  Kopernicus will still work if this number is as low as 100 meters
			geeASL = 0.08  //don't set this too low, or the body will have an SOI that's too small.  Gilly = 0.03
			tidallyLocked = True  //If the same side of the moon always faces the body it's orbiting, it's tidally locked.  Examples include the Moon in real life, and the Mun in KSP.

			ScienceValues
			{
				landedDataValue = 12
				inSpaceLowDataValue = 10
				inSpaceHighDataValue = 9.5
				recoveryValue = 10
				spaceAltitudeThreshold =  15000	
			}			
        }
        Orbit
        {
            referenceBody = Jungis  //You can also add moons to the stock planets, for example, Jool.  
            color = 1,1,0,0.1
            inclination = 7.2  //Don't be afraid to set high inclinations or eccentricities for asteroids, this makes them more of a challenge to get to!
            eccentricity = 0
            semiMajorAxis = 18400000 //this is about twice Bop's SMA.
            longitudeOfAscendingNode = 0
            argumentOfPeriapsis = 0
            meanAnomalyAtEpoch = 0
            epoch = 0
        }
		ScaledVersion
        {
            Material
            {	
                texture = Jungis/TextureBank/Allution_Color
                normals = Jungis/TextureBank/Allution_Normal
            }
        }
		PQS
		{
			Mods
			{
				VertexSimplexHeightAbsolute
				{
					seed = 22285562  //change this to any random number
					deformity = 12800  //how high are the highest plateaus and mountains
					octaves = 1  //how small do you want the mountains to be  (3 or lower, they take up basically a quarter of the planet)
					persistence = 0.2  //don't know what these do, you can try changing them and see what happens
					frequency = 1.0
					enabled = True
				}
				VertexHeightNoise
				{
					seed = 8758828  //change this to any random number
					deformity = 220  //how bumpy and jagged is the terrain
					frequency = 2  //don't know what these do, you can try changing them and see what happens
					lacunarity = 2.5
					persistance = 1.0
					octaves = 3  //how small do you want the jagged ridges to be
					enabled = True
				}
				VertexSimplexNoiseColor  //Small gilly-based moons don't have color maps and use this instead
				{
					seed = 175123  //change this to any random number
					blend = 1
					colorStart = 0,1,0,1  //The color of your moon is a spectrum between these two colors
					colorEnd = 0.3,0.27,0.22,1
					octaves = 7  //how small do you want the blotches of color to be
					persistence = 0.5  //don't know what these do, you can try changing them and see what happens
					frequency = 1
					enabled = True
				}
			}
		}
    }
	Body
	{
		name = Habis
		Template
		{
			name = Kerbin
			removePQSMods = PQSMod_VertexHeightMap
		}
		Properties
        {
            description = HABIS! The land is mostly flat with dotted mountains. Wait... why is this even habitable? If it's tidal heated, then.. Heck, Cere should be done!
            radius = 500000
            geeASL = 0.92
            rotationPeriod = 36000
            rotates = true
            tidallyLocked = true
            initialRotation = 0
            isHomeWorld = false //REALLY IMPORTANT
            timewarpAltitudeLimits = 0 30000 30000 60000 100000 300000 600000 800000
        }
		Orbit
        {
            referenceBody = Jungis
            inclination = 0.5
            eccentricity = 0
            semiMajorAxis = 26000000
            longitudeOfAscendingNode = 5
            argumentOfPeriapsis = 0
            meanAnomalyAtEpoch = 0
            epoch = 0
        }
		ScaledVersion
        {
            Material
            {	
                texture = Jungis/TextureBank/Habis_Color
                normals = Jungis/TextureBank/Habis_Normal
            }
        }
		PQS
		{
			Mods
			{
				VertexSimplexHeight
                {
                    seed = 215252
                    deformity = 1200.0
                    octaves = 0.8
                    persistence = 0.333
                    frequency = 1
                    enabled = true
                    order = 100
                }

				VertexSimplexHeightAbsolute
				{
					seed = 63531
					deformity = 240
					octaves = 0.8
					persistence = 0.8
					frequency = 12.0
					enabled = true
					order = 100
				}

				VertexHeightNoise
				{
					noiseType = RiggedMultifractal
					deformity = 3000
					seed = 643342
					frequency = 1
					lacunarity = 2.0
					persistence = 0.6
					octaves = 12
					mode = Low
					enabled = True
					order = 19
				}
				
				VertexHeightNoiseVertHeightCurve2
				{
					deformity = 2500
					ridgedAddSeed = 3642352
					ridgedAddFrequency = 20
					ridgedAddLacunarity = 7
					ridgedAddOctaves = 10
					ridgedSubSeed = 235235
					ridgedSubFrequency = 10
					ridgedSubLacunarity = 5
					ridgedSubOctaves = 10
					simplexCurve
					{
						key = 0 0 0 0
						key = 0.9328867 0.4 1.659658 1.659658
						key = 1 3 3.005844 3.005844
					}
					simplexHeightStart = 80
					simplexHeightEnd = 4400
					simplexSeed = 745346
					simplexOctaves = 10
					simplexPersistence = 0.18
					simplexFrequency = 40
					enabled = true
					order = 200
				}
			}
		}
	}
	Body
	{
		name = Oceanus
		Template
		{
			name = Kerbin
		}
		Properties
        {
            description = Oceanus is very aquatic. Talk about SeaWorld!
            radius = 400000
            geeASL = 0.75
            rotationPeriod = 36000
            rotates = true
            tidallyLocked = true
            initialRotation = 0
            isHomeWorld = false //REALLY IMPORTANT
            timewarpAltitudeLimits = 0 30000 30000 60000 100000 300000 600000 800000
        }
		Orbit
        {
            referenceBody = Jungis
            inclination = 0.5
            eccentricity = 0
            semiMajorAxis = 33300000
            longitudeOfAscendingNode = 5
            argumentOfPeriapsis = 0
            meanAnomalyAtEpoch = 0
            epoch = 0
        }
		ScaledVersion
        {
            Material
            {	
                texture = Jungis/TextureBank/Oceanus_Color
                normals = Jungis/TextureBank/Oceanus_Normal
            }
        }
		PQS
		{
			Mods
			{
				VertexHeightOffset
				{
					offset = -7000
					enabled = true
					order = 100
				}
				VertexHeightMap
				{
					deformity = 2500
					offset = 0
				}
			}
		}
	}
	Body
    {
        name = Fen
        flightGlobalsIndex = 1236
        Template
        {
            name = Gilly  //keep this as is, other small moons (Minmus, Dres, Bop, Pol) use different height characteristics
        }
        Properties
        {
			description = While life will never be possible on this asteroid, it does offer a unique sight in the night sky of nearby moons. Its colors and distance to the moons around it occasionally makes the night quite magical on those moons, especially those with an atmosphere.
			radius = 52000  //You can have a really tiny asteroid if you want.  Kopernicus will still work if this number is as low as 100 meters
			geeASL = 0.02  //don't set this too low, or the body will have an SOI that's too small.  Gilly = 0.03
			tidallyLocked = True  //If the same side of the moon always faces the body it's orbiting, it's tidally locked.  Examples include the Moon in real life, and the Mun in KSP.

			ScienceValues
			{
				landedDataValue = 12
				inSpaceLowDataValue = 10
				inSpaceHighDataValue = 9.5
				recoveryValue = 10
				spaceAltitudeThreshold =  15000	
			}			
        }
        Orbit
        {
            referenceBody = Jungis  //You can also add moons to the stock planets, for example, Jool.  
            color = 0.28182,0.2276048,0.3137255,1
            inclination = 5.338  //Don't be afraid to set high inclinations or eccentricities for asteroids, this makes them more of a challenge to get to!
            eccentricity = 0.022376
            semiMajorAxis = 40000000 //this is about twice Bop's SMA.
            longitudeOfAscendingNode = 0
            argumentOfPeriapsis = 0
            meanAnomalyAtEpoch = 0
            epoch = 0
        }
		ScaledVersion
        {
            Material
            {	
                texture = Jungis/TextureBank/Fen_Color
                normals = Jungis/TextureBank/Fen_Normal
            }
        }
		PQS
		{
			Mods
			{
				VertexSimplexHeightAbsolute
				{
					seed = 3327426  //change this to any random number
					deformity = 13400  //how high are the highest plateaus and mountains
					octaves = 1  //how small do you want the mountains to be  (3 or lower, they take up basically a quarter of the planet)
					persistence = 0.2  //don't know what these do, you can try changing them and see what happens
					frequency = 1.0
					enabled = True
				}
				VertexHeightNoise
				{
					seed = 8758828  //change this to any random number
					deformity = 120  //how bumpy and jagged is the terrain
					frequency = 2  //don't know what these do, you can try changing them and see what happens
					lacunarity = 2.5
					persistance = 1.0
					octaves = 3  //how small do you want the jagged ridges to be
					enabled = True
				}
				VertexSimplexNoiseColor  //Small gilly-based moons don't have color maps and use this instead
				{
					seed = 0175123  //change this to any random number
					blend = 1
					colorStart = 1,1,0,1  //The color of your moon is a spectrum between these two colors
					colorEnd = 1,1,0.8,1
					octaves = 1  //how small do you want the blotches of color to be
					persistence = 0.5  //don't know what these do, you can try changing them and see what happens
					frequency = 1
					enabled = True
				}
			}
		}
    }
	Body    
    {
        name = Fonso Jungis
		cbNameLater = Fonso
        flightGlobalsIndex = 1235 //Don't forget to make this number different from your other planets!
        Template
        {
            name = Tylo
			removePQSMods = PQSMod_VertexHeightMap, PQSMod_VertexColorMap
        }
        Properties
        {
            description = Fonso is pretty cool, although the punching bag of the Jungis system. It is VERY mountainous, making landings hard. Plus, its high density makes it harder. It is sometimes called the "Breakfast Planet" because kerbals think the gold and white are eggs and the red is bacon.
            radius = 300000
            geeASL = 0.5
			
			ScienceValues
			{
				landedDataValue = 10
				inSpaceLowDataValue = 9
				inSpaceHighDataValue = 8.5
				recoveryValue = 9
				spaceAltitudeThreshold =  80000	
			}
        }
        Orbit
        {
            referenceBody = Jungis  //you can have your moons orbiting your planets
            color = XKCD.Gold
            inclination = 0.3
            eccentricity = 0.05
            semiMajorAxis = 52000000  //this is the Mun's SMA
            longitudeOfAscendingNode = 60
            argumentOfPeriapsis = 25
            meanAnomalyAtEpoch = 0
            epoch = 0
        }
        ScaledVersion
        {
            Material
            {	
                texture = Jungis/TextureBank/Fonso_Color
                normals = Jungis/TextureBank/Fonso_Normal
            }
        }
		PQS
		{
			Mods
			{
				VertexPlanet
				{
					buildHeightColors = false
					colorDeformity = 6000
					ContinentalSimplex
					{
						deformity = 1
						frequency = 1
						octaves = 10
						persistance = 0.400000005960464
						seed = 46357
					}
					RuggednessSimplex
					{
						deformity = 1
						frequency = 0.5
						octaves = 4
						persistance = 0.5
						seed = 643334
					}
					SharpnessNoise
					{
						seed = 0
						deformity = 0.0012
						octaves = 4
						persistance = 0.5
						frequency = 0.5
						Noise
						{
							frequency = 0.5
							lacunarity = 0.5
							quality = High
							octaveCount = 4
							seed = 212121
						}
					}
					SharpnessSimplexMap
					{
						deformity = 50
						frequency = 1.5
						octaves = 4
						persistance = 0.550000011920929
						seed = 246246
					}
					deformity = 12500
					
					// The LandClasses define the surface-color, so we change them
					LandClasses
					{
						LandClass
						{
							name = Bronze
							baseColor = XKCD.Bronze
							colorNoise = 0.386, 0.151, 0.127, 1.000
							colorNoiseAmount = 0.200000002980232
							SimplexNoiseMap
							{
								deformity = 1
								frequency = 4
								octaves = 4
								persistance = 0.600000023841858
								seed = 764357
							}
							fractalStart = 0
							fractalEnd = 0.00100000004749745
							fractalDelta = 0.00100000004749745
							startHeight = 0
							endHeight = 0
							lerpToNext = true
						}
						LandClass
						{
							name = Beach
							baseColor = XKCD.IndianRed
							colorNoise = 0.500, 0.250, 0.230, 1.000
							colorNoiseAmount = 0.200000002980232
							SimplexNoiseMap
							{
								deformity = 1
								frequency = 4
								octaves = 4
								persistance = 0.600000023841858
								seed = 33134
							}
							fractalStart = 0.00100000004749745
							fractalEnd = 0.449999988079071
							fractalDelta = 0.448999988031574
							startHeight = 0
							endHeight = 0
							lerpToNext = true
						}
						LandClass
						{
							name = Golden
							baseColor = XKCD.Gold
							colorNoise = 0.18, 0.12, 0.05, 1.000
							colorNoiseAmount = 0.300000011920929
							SimplexNoiseMap
							{
								deformity = 1
								frequency = 3
								octaves = 4
								persistance = 0.600000023841858
								seed = 33135
							}
							fractalStart = 0.449999988079071
							fractalEnd = 0.899999976158142
							fractalDelta = 0.449999988079071
							startHeight = 0
							endHeight = 0
							lerpToNext = true
						}
						LandClass
						{
							name = Snow
							baseColor = XKCD.Grey
							colorNoise = 0.05, 0.05, 0.05, 1.000
							colorNoiseAmount = 0.400000005960464
							SimplexNoiseMap
							{
								deformity = 1
								frequency = 2
								octaves = 4
								persistance = 0.600000023841858
								seed = 33136
							}
							fractalStart = 0.899999976158142
							fractalEnd = 2
							fractalDelta = 1.10000002384186
							startHeight = 0
							endHeight = 0
							lerpToNext = false
						}
					}
					oceanDepth = 0
					oceanLevel = 0
					oceanSnap = false
					oceanStep = 0
					seed = 845457
					terrainRidgeBalance = 0.1
					terrainRidgesMax = 1
					terrainRidgesMin = 0.000001
					terrainShapeStart = 3
					terrainShapeEnd = -3
					terrainSmoothing = 0.01
					TerrainTypeSimplex
					{
						deformity = 1
						frequency = 4
						octaves = 12
						persistance = 0.7
						seed = 33126
					}
					enabled = True
					order = 100		
				}
				VoronoiCraters
                {
                    name = Volcanos
					deformation = 2500
                    voronoiSeed = 569545
                    voronoiDisplacement = 0
                    voronoiFrequency = 1
					CraterCurve
					{
						key = -0.9982381 -0.741178 -0.4099868 -0.4099868
						key = -0.9332262 -0.767832 0.2272064 0.2272064
						key = -0.8990405 -0.543334 20.79542 20.79542
						key = -0.7445966 1.854991 -0.9074891 -0.9074891
						key = -0.4499771 0.9 0.4878587 0.4878587
						key = -0.4015177 0.85 -2.003235 -2.003235
						key = -0.2297457 0.4 -2.298268 -2.298268
						key = 0.2724952 0.004238 -0.4936511 0.02482318
						key = 0.9998434 0.004091 -0.000202104 -0.000202104
					}
                    simplexSeed = 984745
                    simplexOctaves = 8
                    simplexPersistence = 0.3
                    simplexFrequency = 40
                    jitter = 0
                    jitterHeight = 1
                    rFactor = 1
                    rOffset = 1
                    colorOpacity = 0.2
                    DebugColorMapping = false
                    enabled = true
                    order = 100
                }
			}
		}
	}
	Body
	{
		name = Ehkki
		Template
		{
			name = Eeloo
			removePQSMods = PQSMod_VertexColorMap, PQSMod_VertexHeightMap
		}
		Properties
        {
            description = The sister planet of Eeloo! It has 3 giant craters and an orange surface. Is the orange peanut butter? As far as we know, no. It was discovered when some scientists were simulating the orbit of Fonso. However, Fonso seemed to go off its suspected path and was influenced by another object. It was later seen to be Ehkki. To this day, no one knows why we didn’t see the highly reflective white and orange snowball.
            radius = 288000
            geeASL = 0.125
            rotates = true
            tidallyLocked = true
            initialRotation = 0
            isHomeWorld = false
		}
		Orbit
        {
            referenceBody = Jungis  //you can have your moons orbiting your planets
            color = XKCD.Ice
            inclination = 0.01
            eccentricity = 0.01
            semiMajorAxis = 67000000  //this is the Mun's SMA
            longitudeOfAscendingNode = 0
            argumentOfPeriapsis = 0
            meanAnomalyAtEpoch = 0
            epoch = 0
        }
		ScaledVersion
        {
            Material
            {	
                texture = Jungis/TextureBank/Ehkki_Color
                normals = Jungis/TextureBank/Ehkki_Normal
            }
        }
		PQS
		{
			Mods
			{
				// This is one of the most powerful mods, it can generate a fully procedural Planet. I have no idea what some of the values do..
				VertexPlanet
				{
					buildHeightColors = false
					colorDeformity = 5000
					ContinentalSimplex
					{
						deformity = 1
						frequency = 1
						octaves = 10
						persistance = 0.400000005960464
						seed = 84683
					}
					RuggednessSimplex
					{
						deformity = 1
						frequency = 0.5
						octaves = 4
						persistance = 0.5
						seed = 999142
					}
					SharpnessNoise
					{
						seed = 0
						deformity = 0.00100000004749745
						octaves = 4
						persistance = 0.5
						frequency = 0.7
						Noise
						{
							frequency = 0.5
							lacunarity = 0.5
							quality = High
							octaveCount = 4
							seed = 3258
						}
					}
					SharpnessSimplexMap
					{
						deformity = 60
						frequency = 1.333
						octaves = 3
						persistance = 0.5
						seed = 634634
					}
					deformity = 4560
					
					// The LandClasses define the surface-color, so we change them
					LandClasses
					{
						LandClass
						{
							name = AbyPl
							baseColor = XKCD.Rust
							colorNoise = 0.386, 0.151, 0.127, 1.000
							colorNoiseAmount = 0.200000002980232
							SimplexNoiseMap
							{
								deformity = 1
								frequency = 4
								octaves = 4
								persistance = 0.600000023841858
								seed = 33133
							}
							fractalStart = 0
							fractalEnd = 0.00100000004749745
							fractalDelta = 0.00100000004749745
							startHeight = 0
							endHeight = 0
							lerpToNext = true
						}
						LandClass
						{
							name = Beach
							baseColor = XKCD.Ice
							colorNoise = 0.500, 0.250, 0.230, 1.000
							colorNoiseAmount = 0.200000002980232
							SimplexNoiseMap
							{
								deformity = 1
								frequency = 4
								octaves = 4
								persistance = 0.600000023841858
								seed = 33134
							}
							fractalStart = 0.00100000004749745
							fractalEnd = 0.449999988079071
							fractalDelta = 0.448999988031574
							startHeight = 0
							endHeight = 0
							lerpToNext = true
						}
						LandClass
						{
							name = Grass
							baseColor = XKCD.White
							colorNoise = 0.18, 0.12, 0.05, 1.000
							colorNoiseAmount = 0.300000011920929
							SimplexNoiseMap
							{
								deformity = 1
								frequency = 3
								octaves = 4
								persistance = 0.600000023841858
								seed = 33135
							}
							fractalStart = 0.449999988079071
							fractalEnd = 0.899999976158142
							fractalDelta = 0.449999988079071
							startHeight = 0
							endHeight = 0
							lerpToNext = true
						}
						LandClass
						{
							name = Snow
							baseColor = XKCD.VeryLightPink
							colorNoise = 0.18, 0.12, 0.05, 1.000
							colorNoiseAmount = 0.400000005960464
							SimplexNoiseMap
							{
								deformity = 1
								frequency = 2
								octaves = 4
								persistance = 0.600000023841858
								seed = 33136
							}
							fractalStart = 0.899999976158142
							fractalEnd = 2
							fractalDelta = 1.10000002384186
							startHeight = 0
							endHeight = 0
							lerpToNext = false
						}
					}
					oceanDepth = 0
					oceanLevel = 0
					oceanSnap = false
					oceanStep = 0
					seed = 648292
					terrainRidgeBalance = 0.1
					terrainRidgesMax = 1
					terrainRidgesMin = 0.4
					terrainShapeStart = 2
					terrainShapeEnd = -2
					terrainSmoothing = 0.100000001490116
					TerrainTypeSimplex
					{
						deformity = 1
						frequency = 4
						octaves = 12
						persistance = 0.7
						seed = 6423624
					}
					enabled = True
					order = 100		
				}
				VoronoiCraters
                {
					name = medlarge
                    deformation = 3000
                    voronoiSeed = 173573
                    voronoiDisplacement = 0
                    voronoiFrequency = 5
                    simplexSeed = 35234
                    simplexOctaves = 2.4
                    simplexPersistence = 0.6
                    simplexFrequency = 42
                    jitter = 0
                    jitterHeight = 0
                    rFactor = 0.663
                    rOffset = 1.326
                    colorOpacity = 1
                    DebugColorMapping = false
                    enabled = true
                    order = 100
                }
				VoronoiCraters
                {
					name = gargantua
                    deformation = 15000
                    voronoiSeed = 923572
                    voronoiDisplacement = 0
                    voronoiFrequency = 0.5
                    simplexSeed = 745435
                    simplexOctaves = 2
                    simplexPersistence = 0.5
                    simplexFrequency = 1
                    jitter = 0
                    jitterHeight = 0
                    rFactor = 5
                    rOffset = 10
                    colorOpacity = 1
                    DebugColorMapping = false
                    enabled = true
                    order = 100
                }
			}
		}
	}
	Body
	{
		name = Desot
		flightGlobalsIndex = 504
        Template
        {
            name = Duna
			removePQSMods = PQSMod_VertexHeightMap, PQSMod_VertexColorMapBlend, PQSLandControl, PQSMod_VertexSimplexHeightAbsolute, PQSMod_VertexHeightNoiseVertHeightCurve2
        }
        Properties
        {
            description = Beautiful as this moon may be, life will of course never be possible here. But in terms of research, this moon has plenty of secrets and answers ready to be discovered. If nothing else, this moon at least makes for a gorgeous sight in the night skies of the moons around it.
			tidallyLocked = True
            radius = 600000
            geeASL = 0.66
        }
        Orbit
        {
            referenceBody = Jungis
            color = 1.0,0.96,0.0,1
            inclination = 0.1
            eccentricity = 0
            semiMajorAxis = 78000000
            longitudeOfAscendingNode = 0
            argumentOfPeriapsis = 0
            meanAnomalyAtEpoch = 0
            epoch = 0
        }
		ScaledVersion
        {
            Material
            {	
                texture = Jungis/TextureBank/Desot_Color
                normals = Jungis/TextureBank/Desot_Normal
            }
        }
		PQS
		{
			Mods
			{
				VertexPlanet
				{
					buildHeightColors = false
					colorDeformity = 9000
					ContinentalSimplex
					{
						deformity = 1.5
						frequency = 1.82
						octaves = 12
						persistance = 0.42
						seed = 6232
					}
					RuggednessSimplex
					{
						deformity = 1.6
						frequency = 0.7
						octaves = 3
						persistance = 0.8
						seed = 624646
					}
					SharpnessNoise
					{
						seed = 1312
						deformity = 0.00100000004749745
						octaves = 6
						persistance = 1
						frequency = 1
						Noise
						{
							frequency = 1
							lacunarity = 1
							quality = High
							octaveCount = 4
							seed = 73573
						}
					}
					SharpnessSimplexMap
					{
						deformity = 40
						frequency = 1.6
						octaves = 3
						persistance = 0.550000011920929
						seed = 52153
					}
					deformity = 5400
					
					// The LandClasses define the surface-color, so we change them
					LandClasses
					{
						LandClass
						{
							name = AbyPl
							baseColor = XKCD.SandyBrown
							colorNoise = 0.386, 0.151, 0.127, 1.000
							colorNoiseAmount = 0.200000002980232
							SimplexNoiseMap
							{
								deformity = 1
								frequency = 4
								octaves = 4
								persistance = 0.600000023841858
								seed = 33133
							}
							fractalStart = 0
							fractalEnd = 0.00100000004749745
							fractalDelta = 0.00100000004749745
							startHeight = 0
							endHeight = 0
							lerpToNext = true
						}
						LandClass
						{
							name = Beach
							baseColor = XKCD.Camel
							colorNoise = 0.500, 0.250, 0.230, 1.000
							colorNoiseAmount = 0.200000002980232
							SimplexNoiseMap
							{
								deformity = 1
								frequency = 4
								octaves = 4
								persistance = 0.600000023841858
								seed = 33134
							}
							fractalStart = 0.00100000004749745
							fractalEnd = 0.449999988079071
							fractalDelta = 0.448999988031574
							startHeight = 0
							endHeight = 0
							lerpToNext = true
						}
						LandClass
						{
							name = Grass
							baseColor = XKCD.Desert
							colorNoise = 0.18, 0.12, 0.05, 1.000
							colorNoiseAmount = 0.300000011920929
							SimplexNoiseMap
							{
								deformity = 1
								frequency = 3
								octaves = 4
								persistance = 0.600000023841858
								seed = 33135
							}
							fractalStart = 0.449999988079071
							fractalEnd = 0.899999976158142
							fractalDelta = 0.449999988079071
							startHeight = 0
							endHeight = 0
							lerpToNext = true
						}
						LandClass
						{
							name = Snow
							baseColor = XKCD.Sandstone
							colorNoise = 0.18, 0.12, 0.05, 1.000
							colorNoiseAmount = 0.400000005960464
							SimplexNoiseMap
							{
								deformity = 1
								frequency = 2
								octaves = 4
								persistance = 0.600000023841858
								seed = 33136
							}
							fractalStart = 0.899999976158142
							fractalEnd = 2
							fractalDelta = 1.10000002384186
							startHeight = 0
							endHeight = 0
							lerpToNext = false
						}
					}
					oceanDepth = 0
					oceanLevel = 0
					oceanSnap = false
					oceanStep = 0
					seed = 734732
					terrainRidgeBalance = 0.1
					terrainRidgesMax = 1
					terrainRidgesMin = 0.4
					terrainShapeStart = 2
					terrainShapeEnd = -2
					terrainSmoothing = 0.100000001490116
					TerrainTypeSimplex
					{
						deformity = 1
						frequency = 4
						octaves = 12
						persistance = 0.7
						seed = 61373
					}
					enabled = True
					order = 100		
				}
				VertexHeightNoise
				{
					noiseType = RiggedMultifractal
					deformity = 2500
					seed = 26462
					frequency = 3
					lacunarity = 3
					persistance = 0.6
					octaves = 8
					mode = Low
					enabled = true
					order = 62
				}
			}
		}
	}
	Body
    {
        name = Loohil
        flightGlobalsIndex = 505
        Template
        {
            name = Eve
			removePQSMods = PQSMod_VertexHeightMap, PQSMod_VertexColorMap
			removeOcean = true
        }
        Properties
        {
            description = Loohil the Cinnamon World! It's covered in cinnamon and it evens has entire oceans of the stuff!
			tidallyLocked = True
            radius = 750000
            mass = 1.56722852852467893295278496E+23
        }
        Orbit
        {
            referenceBody = Jungis
            color = XKCD.Cinnamon
            inclination = 20
            eccentricity = 0
            semiMajorAxis = 100000000
            longitudeOfAscendingNode = 225
            argumentOfPeriapsis = 43.2
            meanAnomalyAtEpoch = 2.44
            epoch = 29444
        }
		ScaledVersion
        {
            Material
            {	
                texture = Jungis/TextureBank/Loohil_Color
                normals = Jungis/TextureBank/Loohil_Normal
				
				Gradient
                {
                    0.0 = 0.643,0.220,0.094,1
                    0.6 = 0.0549,0.0784,0.141,1
                    1.0 = 0.0196,0.0196,0.0196,1
                }
            }
        }
		Atmosphere
		{
			ambientColor = 0.0306,0.0187,0.0235,1

            //
            // shader.invWaveLength = Color( 1 / r^4, 1 / g^4, 1 / b^4, 0.5);
            //
            lightColor = 0.509,0.588,0.643,0
		}
		PQS
		{
			Mods
			{
				AerialPerspectiveMaterial
				{
					globalDensity = -0.00001
					heightFalloff = 6.75
					atmosphereDepth = 150000
					DEBUG_SetEveryFrame = true
					cameraAlt = 0
					cameraAtmosAlt = 0
					heightDensAtViewer = 0
					enabled = true
					order = 2
				}
				VertexPlanet
				{
					buildHeightColors = false
					colorDeformity = 5000
					ContinentalSimplex
					{
						deformity = 1
						frequency = 1
						octaves = 10
						persistance = 0.400000005960464
						seed = 635754
					}
					RuggednessSimplex
					{
						deformity = 1
						frequency = 0.5
						octaves = 4
						persistance = 0.5
						seed = 782434
					}
					SharpnessNoise
					{
						seed = 0
						deformity = 0.00100000004749745
						octaves = 4
						persistance = 0.5
						frequency = 0.5
						Noise
						{
							frequency = 0.5
							lacunarity = 0.5
							quality = High
							octaveCount = 4
							seed = 624412
						}
					}
					SharpnessSimplexMap
					{
						deformity = 50
						frequency = 1.5
						octaves = 4
						persistance = 0.550000011920929
						seed = 779233
					}
					deformity = 3500
					
					// The LandClasses define the surface-color, so we change them
					LandClasses
					{
						LandClass
						{
							name = RustLands
							baseColor = XKCD.Rust
							colorNoise = 0.386, 0.151, 0.127, 1.000
							colorNoiseAmount = 0.200000002980232
							SimplexNoiseMap
							{
								deformity = 1
								frequency = 4
								octaves = 4
								persistance = 0.600000023841858
								seed = 32466
							}
							fractalStart = 0
							fractalEnd = 0.00100000004749745
							fractalDelta = 0.00100000004749745
							startHeight = 0
							endHeight = 0
							lerpToNext = true
						}
						LandClass
						{
							name = BurntSienaBeach
							baseColor = XKCD.BurntSiena
							colorNoise = 0.500, 0.250, 0.230, 1.000
							colorNoiseAmount = 0.200000002980232
							SimplexNoiseMap
							{
								deformity = 1
								frequency = 4
								octaves = 4
								persistance = 0.600000023841858
								seed = 33134
							}
							fractalStart = 0.00100000004749745
							fractalEnd = 0.449999988079071
							fractalDelta = 0.448999988031574
							startHeight = 0
							endHeight = 0
							lerpToNext = true
						}
						LandClass
						{
							name = CinnamonFields
							baseColor = XKCD.Cinnamon
							colorNoise = 0.18, 0.12, 0.05, 1.000
							colorNoiseAmount = 0.300000011920929
							SimplexNoiseMap
							{
								deformity = 1
								frequency = 3
								octaves = 4
								persistance = 0.600000023841858
								seed = 33135
							}
							fractalStart = 0.449999988079071
							fractalEnd = 0.899999976158142
							fractalDelta = 0.449999988079071
							startHeight = 0
							endHeight = 0
							lerpToNext = true
						}
						LandClass
						{
							name = BrickOrangeSnow
							baseColor = XKCD.BrickOrange
							colorNoise = 0.18, 0.12, 0.05, 1.000
							colorNoiseAmount = 0.400000005960464
							SimplexNoiseMap
							{
								deformity = 1
								frequency = 2
								octaves = 4
								persistance = 0.600000023841858
								seed = 33136
							}
							fractalStart = 0.899999976158142
							fractalEnd = 2
							fractalDelta = 1.10000002384186
							startHeight = 0
							endHeight = 0
							lerpToNext = false
						}
					}
					oceanDepth = 0
					oceanLevel = 0
					oceanSnap = false
					oceanStep = 0
					seed = 735735
					terrainRidgeBalance = 0.1
					terrainRidgesMax = 1
					terrainRidgesMin = 0.4
					terrainShapeStart = 2
					terrainShapeEnd = -2
					terrainSmoothing = 0.1
					TerrainTypeSimplex
					{
						deformity = 1
						frequency = 4
						octaves = 12
						persistance = 0.7
						seed = 457422
					}
					enabled = True
					order = 100		
				}
				
				VertexHeightOffset
				{
					offset = -750
					enabled = true
					order = 101
				}
			}
		}
		Ocean
		{
			maxQuadLengthsPerFrame = 0.03
            minLevel = 2
            maxLevel = 12
            minDetailDistance = 8
			oceanColor = XKCD.Cinnamon
			
			Material
			{
				colorFromSpace = XKCD.Cinnamon
				color = XKCD.Cinnamon
			}
			
			FallbackMaterial
			{
				colorFromSpace = XKCD.Cinnamon
				color = XKCD.Cinnamon
			}
			
			Mods
			{
				AerialPerspectiveMaterial
				{
					globalDensity = -0.00001
					heightFalloff = 6.75
					atmosphereDepth = 150000
					DEBUG_SetEveryFrame = true
					cameraAlt = 0
					cameraAtmosAlt = 0
					heightDensAtViewer = 0
					enabled = true
					order = 100
				}	
				OceanFX
				{
					Watermain
					{
						waterTex-0 = BUILTIN/sea-water1
						waterTex-1 = BUILTIN/sea-water2
						waterTex-2 = BUILTIN/sea-water3
						waterTex-3 = BUILTIN/sea-water4
						waterTex-4 = BUILTIN/sea-water5
						waterTex-5 = BUILTIN/sea-water6
						waterTex-6 = BUILTIN/sea-water7
						waterTex-7 = BUILTIN/sea-water8
					}
					framesPerSecond = 1
					spaceAltitude = 100000
					blendA = 0
					blendB = 0
					texBlend = 0
					angle = 0
					specColor = 0.0,0.0,-1,1
					oceanOpacity = 0
					spaceSurfaceBlend = 0
					enabled = true
					order = 200
				}
			}
		}
    }
	Body
    {
        name = Nashin
        flightGlobalsIndex = 1236
        Template
        {
            name = Gilly  //keep this as is, other small moons (Minmus, Dres, Bop, Pol) use different height characteristics
        }
        Properties
        {
			description = While normally satellites like this would have been impossible, Loohil's high gravity and distance from Jungis allowed it to capture this moonlet.
			radius = 19000  //You can have a really tiny asteroid if you want.  Kopernicus will still work if this number is as low as 100 meters
			geeASL = 0.02  //don't set this too low, or the body will have an SOI that's too small.  Gilly = 0.03
			tidallyLocked = True  //If the same side of the moon always faces the body it's orbiting, it's tidally locked.  Examples include the Moon in real life, and the Mun in KSP.

			ScienceValues
			{
				landedDataValue = 12
				inSpaceLowDataValue = 10
				inSpaceHighDataValue = 9.5
				recoveryValue = 10
				spaceAltitudeThreshold =  15000	
			}			
        }
        Orbit
        {
            referenceBody = Loohil  //You can also add moons to the stock planets, for example, Jool.  
            color = 0.9,0.8,0.7,1
            inclination = 32  //Don't be afraid to set high inclinations or eccentricities for asteroids, this makes them more of a challenge to get to!
            eccentricity = 0.1
            semiMajorAxis = 4250000 //this is about twice Bop's SMA.
            longitudeOfAscendingNode = 55
            argumentOfPeriapsis = 0
            meanAnomalyAtEpoch = 0
            epoch = 0
        }
		ScaledVersion
        {
            Material
            {	
                texture = Jungis/TextureBank/Nashin_Color
                normals = Jungis/TextureBank/Nashin_Normal
            }
        }
		PQS
		{
			Mods
			{
				VertexSimplexHeightAbsolute
				{
					seed = 78567456  //change this to any random number
					deformity = 10000  //how high are the highest plateaus and mountains
					octaves = 6  //how small do you want the mountains to be  (3 or lower, they take up basically a quarter of the planet)
					persistence = 0.4  //don't know what these do, you can try changing them and see what happens
					frequency = 1.0
					enabled = True
				}
				VertexHeightNoise
				{
					seed = 78845655  //change this to any random number
					deformity = 500  //how bumpy and jagged is the terrain
					frequency = 4  //don't know what these do, you can try changing them and see what happens
					lacunarity = 2.5
					persistance = 1.0
					octaves = 6  //how small do you want the jagged ridges to be
					enabled = True
				}
				VertexSimplexNoiseColor  //Small gilly-based moons don't have color maps and use this instead
				{
					seed = 79556995  //change this to any random number
					blend = 1
					colorStart = 0.7,0.6,0.95,1 //The color of your moon is a spectrum between these two colors
					colorEnd = 1,0,1,1
					octaves = 7  //how small do you want the blotches of color to be
					persistence = 0.5  //don't know what these do, you can try changing them and see what happens
					frequency = 1
					enabled = True
				}
			}
		}
    }
	Body
    {
        name = Kehn
        flightGlobalsIndex = 1236
        Template
        {
            name = Gilly  //keep this as is, other small moons (Minmus, Dres, Bop, Pol) use different height characteristics
        }
        Properties
        {
			description = This moonlet is in a 2:3 resonance with Loohil.
			radius = 28000  //You can have a really tiny asteroid if you want.  Kopernicus will still work if this number is as low as 100 meters
			mass = 2.82856469E+17 //don't set this too low, or the body will have an SOI that's too small.  Gilly = 0.03
			tidallyLocked = True  //If the same side of the moon always faces the body it's orbiting, it's tidally locked.  Examples include the Moon in real life, and the Mun in KSP.

			ScienceValues
			{
				landedDataValue = 12
				inSpaceLowDataValue = 10
				inSpaceHighDataValue = 9.5
				recoveryValue = 10
				spaceAltitudeThreshold =  15000	
			}			
        }
        Orbit
        {
            referenceBody = Jungis  //You can also add moons to the stock planets, for example, Jool.  
            color = 0.9,0.8,0.7,1
            inclination = 20  //Don't be afraid to set high inclinations or eccentricities for asteroids, this makes them more of a challenge to get to!
            eccentricity = 0.3
            semiMajorAxis = 131000000 //this is about twice Bop's SMA.
            longitudeOfAscendingNode = 225
            argumentOfPeriapsis = 43.2
            meanAnomalyAtEpoch = 0
            epoch = 29444
        }
		ScaledVersion
        {
            Material
            {	
                texture = Jungis/TextureBank/Kehn_Color
                normals = Jungis/TextureBank/Kehn_Normal
            }
        }
		PQS
		{
			Mods
			{
				VertexSimplexHeightAbsolute
				{
					seed = 6302525  //change this to any random number
					deformity = 5000  //how high are the highest plateaus and mountains
					octaves = 4  //how small do you want the mountains to be  (3 or lower, they take up basically a quarter of the planet)
					persistence = 0.6  //don't know what these do, you can try changing them and see what happens
					frequency = 1.5
					enabled = True
				}
				VertexHeightNoise
				{
					seed = 67384096  //change this to any random number
					deformity = 700  //how bumpy and jagged is the terrain
					frequency = 6 //don't know what these do, you can try changing them and see what happens
					lacunarity = 3
					persistance = 1.5
					octaves = 4 //how small do you want the jagged ridges to be
					enabled = True
				}
				VertexSimplexNoiseColor  //Small gilly-based moons don't have color maps and use this instead
				{
					seed = 593252 //change this to any random number
					blend = 1
					colorStart = XKCD.Butterscotch  //The color of your moon is a spectrum between these two colors
					colorEnd = XKCD.Butter
					octaves = 6  //how small do you want the blotches of color to be
					persistence = 0.4  //don't know what these do, you can try changing them and see what happens
					frequency = 1.2
					enabled = True
				}
				VertexHeightNoise
				{
					noiseType = RiggedMultifractal
					deformity = 5000
					seed = 6224
					frequency = 1.2
					lacunarity = 3
					persistance = 0.5
					octaves = 10
					mode = Low
					enabled = true
					order = 44
				}
			}
		}
    }
	Body
    {
        name = Kurst
        flightGlobalsIndex = 1236
        Template
        {
            name = Gilly  //keep this as is, other small moons (Minmus, Dres, Bop, Pol) use different height characteristics
        }
        Properties
        {
			description = If you squint really really hard in your telescope, you can see it. Change this text to whatever you want.
			radius = 8000  //You can have a really tiny asteroid if you want.  Kopernicus will still work if this number is as low as 100 meters
			geeASL = 0.02038735  //don't set this too low, or the body will have an SOI that's too small.  Gilly = 0.03
			tidallyLocked = True  //If the same side of the moon always faces the body it's orbiting, it's tidally locked.  Examples include the Moon in real life, and the Mun in KSP.

			ScienceValues
			{
				landedDataValue = 12
				inSpaceLowDataValue = 10
				inSpaceHighDataValue = 9.5
				recoveryValue = 10
				spaceAltitudeThreshold =  15000	
			}			
        }
        Orbit
        {
            referenceBody = Jungis  //You can also add moons to the stock planets, for example, Jool.  
            color = 0,1,1,1
            inclination = 26  //Don't be afraid to set high inclinations or eccentricities for asteroids, this makes them more of a challenge to get to!
            eccentricity = 0.525
            semiMajorAxis = 102000000 //this is about twice Bop's SMA.
            longitudeOfAscendingNode = 100
            argumentOfPeriapsis = 75
            meanAnomalyAtEpoch = 0
            epoch = 200000
        }
		ScaledVersion
        {
            Material
            {	
                texture = Jungis/TextureBank/Kurst_Color
                normals = Jungis/TextureBank/Kurst_Normal
            }
        }
		PQS
		{
			Mods
			{
				VertexSimplexHeightAbsolute
				{
					seed = 88577204  //change this to any random number
					deformity = 6000  //how high are the highest plateaus and mountains
					octaves = 6  //how small do you want the mountains to be  (3 or lower, they take up basically a quarter of the planet)
					persistence = 0.4  //don't know what these do, you can try changing them and see what happens
					frequency = 1.0
					enabled = True
				}
				VertexHeightNoise
				{
					seed = 23510750  //change this to any random number
					deformity = 500  //how bumpy and jagged is the terrain
					frequency = 4  //don't know what these do, you can try changing them and see what happens
					lacunarity = 2.5
					persistance = 1.0
					octaves = 6  //how small do you want the jagged ridges to be
					enabled = True
				}
				VertexSimplexNoiseColor  //Small gilly-based moons don't have color maps and use this instead
				{
					seed = 452453  //change this to any random number
					blend = 1
					colorStart = 0.5,0.5,0.5,1  //The color of your moon is a spectrum between these two colors
					colorEnd = 0,1,1,1
					octaves = 7  //how small do you want the blotches of color to be
					persistence = 0.5  //don't know what these do, you can try changing them and see what happens
					frequency = 1
					enabled = True
				}
			}
		}
    }
	Body
	{
		name = Daphy Jungis
		cbNameLater = Daphy
		Template
		{
			name = Minmus
			removePQSMods = PQSMod_VertexPlanet //to redo
		}
		Properties
        {
            description = ITS SO FLERFFY
            radius = 30000
            mass = 7.8276242E+16
            rotates = true
            tidallyLocked = true
            initialRotation = 0
            isHomeWorld = false
            timewarpAltitudeLimits = 0 1 2 3 4 5 6 7
        }
		Orbit
        {
            referenceBody = Jungis  //You can also add moons to the stock planets, for example, Jool.  
            color = XKCD.Magenta
            inclination = 7  //Don't be afraid to set high inclinations or eccentricities for asteroids, this makes them more of a challenge to get to!
            eccentricity = 0.013
            semiMajorAxis = 136000000 //this is about twice Bop's SMA.
            longitudeOfAscendingNode = 20
            argumentOfPeriapsis = 275
            meanAnomalyAtEpoch = 0
            epoch = 0
        }
		ScaledVersion
        {
            Material
            {	
                texture = Jungis/TextureBank/Daphy_Color
                normals = Jungis/TextureBank/Daphy_Normal
            }
        }
		PQS
		{
			Mods
			{
				// This is one of the most powerful mods, it can generate a fully procedural Planet. I have no idea what some of the values do..
				VertexPlanet
				{
					buildHeightColors = false
					colorDeformity = 5000
					ContinentalSimplex
					{
						deformity = 1
						frequency = 1
						octaves = 10
						persistance = 0.400000005960464
						seed = 235235
					}
					RuggednessSimplex
					{
						deformity = 1
						frequency = 0.5
						octaves = 4
						persistance = 0.5
						seed = 231413
					}
					SharpnessNoise
					{
						seed = 0
						deformity = 0.00100000004749745
						octaves = 4
						persistance = 0.5
						frequency = 0.5
						Noise
						{
							frequency = 0.5
							lacunarity = 0.5
							quality = High
							octaveCount = 4
							seed = 86448
						}
					}
					SharpnessSimplexMap
					{
						deformity = 50
						frequency = 1.5
						octaves = 4
						persistance = 0.550000011920929
						seed = 33128
					}
					deformity = 2305
					
					// The LandClasses define the surface-color, so we change them
					LandClasses
					{
						LandClass
						{
							name = AbyPl
							baseColor = XKCD.LightPink
							colorNoise = 0.386, 0.151, 0.127, 1.000
							colorNoiseAmount = 0.200000002980232
							SimplexNoiseMap
							{
								deformity = 1
								frequency = 4
								octaves = 4
								persistance = 0.600000023841858
								seed = 33133
							}
							fractalStart = 0
							fractalEnd = 0.00100000004749745
							fractalDelta = 0.00100000004749745
							startHeight = 0
							endHeight = 0
							lerpToNext = true
						}
						LandClass
						{
							name = Beach
							baseColor = XKCD.BabyBlue
							colorNoise = 0.500, 0.250, 0.230, 1.000
							colorNoiseAmount = 0.200000002980232
							SimplexNoiseMap
							{
								deformity = 1
								frequency = 4
								octaves = 4
								persistance = 0.600000023841858
								seed = 33134
							}
							fractalStart = 0.00100000004749745
							fractalEnd = 0.449999988079071
							fractalDelta = 0.448999988031574
							startHeight = 0
							endHeight = 0
							lerpToNext = true
						}
						LandClass
						{
							name = Grass
							baseColor = XKCD.CarolinaBlue
							colorNoise = 0.18, 0.12, 0.05, 1.000
							colorNoiseAmount = 0.300000011920929
							SimplexNoiseMap
							{
								deformity = 1
								frequency = 3
								octaves = 4
								persistance = 0.600000023841858
								seed = 33135
							}
							fractalStart = 0.449999988079071
							fractalEnd = 0.899999976158142
							fractalDelta = 0.449999988079071
							startHeight = 0
							endHeight = 0
							lerpToNext = true
						}
						LandClass
						{
							name = Snow
							baseColor = XKCD.Bubblegum
							colorNoise = 0.18, 0.12, 0.05, 1.000
							colorNoiseAmount = 0.400000005960464
							SimplexNoiseMap
							{
								deformity = 1
								frequency = 2
								octaves = 4
								persistance = 0.600000023841858
								seed = 33136
							}
							fractalStart = 0.899999976158142
							fractalEnd = 2
							fractalDelta = 1.10000002384186
							startHeight = 0
							endHeight = 0
							lerpToNext = false
						}
					}
					oceanDepth = 0
					oceanLevel = 0
					oceanSnap = false
					oceanStep = 0
					seed = 764865
					terrainRidgeBalance = 0.1
					terrainRidgesMax = 1
					terrainRidgesMin = 0.4
					terrainShapeStart = 2
					terrainShapeEnd = -2
					terrainSmoothing = 0.100000001490116
					TerrainTypeSimplex
					{
						deformity = 1
						frequency = 4
						octaves = 12
						persistance = 0.7
						seed = 135315
					}
					enabled = True
					order = 100		
				}
			}
		}
	}
	Body
	{
		name = Potatus Jungis
		cbNameLater = Potatus
		Template
		{
			name = Gilly
		}
		Properties
        {
            description = Merciful Kod, this thing just APPEARED! And unlike last time, it wasn't bird droppings on the telescope.
            radius = 21000
            mass = 5.23582753E+18
            rotationPeriod = 1270
            rotates = true
            tidallyLocked = false
            initialRotation = 0
            isHomeWorld = false
            timewarpAltitudeLimits = 0 30 30 60 100 300 600 800
        }
		Orbit
        {
            referenceBody = Jungis  //You can also add moons to the stock planets, for example, Jool.  
            color = XKCD.Brown
            inclination = 5  //Don't be afraid to set high inclinations or eccentricities for asteroids, this makes them more of a challenge to get to!
            eccentricity = 0.02
            semiMajorAxis = 150000000 //this is about twice Bop's SMA.
            longitudeOfAscendingNode = 20
            argumentOfPeriapsis = 275
            meanAnomalyAtEpoch = 0
            epoch = 0
        }
		ScaledVersion
        {
            Material
            {	
                texture = Jungis/TextureBank/Potatus_Color
                normals = Jungis/TextureBank/Potatus_Normal
            }
        }
		PQS
		{
			Mods
			{
				VertexSimplexHeightAbsolute
				{
					seed = 7459021  //change this to any random number
					deformity = 5000  //how high are the highest plateaus and mountains
					octaves = 3.33  //how small do you want the mountains to be  (3 or lower, they take up basically a quarter of the planet)
					persistence = 0.5  //don't know what these do, you can try changing them and see what happens
					frequency = 1.2
					enabled = True
				}
				VertexHeightNoise
				{
					seed = 63934 //change this to any random number
					deformity = 200  //how bumpy and jagged is the terrain
					frequency = 6  //don't know what these do, you can try changing them and see what happens
					lacunarity = 3
					persistance = 1.2
					octaves = 3  //how small do you want the jagged ridges to be
					enabled = True
				}
				VertexSimplexNoiseColor  //Small gilly-based moons don't have color maps and use this instead
				{
					seed = 432593  //change this to any random number
					blend = 1
					colorStart = 0.67,0.62,0.55,1  //The color of your moon is a spectrum between these two colors
					colorEnd = 0.51,0.44,0.37,1
					octaves = 8  //how small do you want the blotches of color to be
					persistence = 0.6  //don't know what these do, you can try changing them and see what happens
					frequency = 0.5
					enabled = True
				}
				VertexHeightNoise
				{
					noiseType = RiggedMultifractal
					deformity = 2000
					seed = 54793
					frequency = 2.5
					lacunarity = 2.5
					persistance = 0.75
					octaves = 12
					mode = Low
					enabled = true
					order = 62
				}
				VoronoiCraters
                {
                    deformation = 750
                    voronoiSeed = 735623
                    voronoiDisplacement = 0
                    voronoiFrequency = 4
                    simplexSeed = 63482
                    simplexOctaves = 4
                    simplexPersistence = 0.6
                    simplexFrequency = 60
                    jitter = 0
                    jitterHeight = 0
                    rFactor = 0.25
                    rOffset = 0.5
                    colorOpacity = 1
                    DebugColorMapping = false
                    enabled = true
                    order = 100
                }
				VertexHeightOblate
				{
					height = 15000
					pow = 2.5
					enabled = true
					order = 100
				}
			}
		}
	}
}